plugins {
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs' version '6.0.7'
    id 'io.freefair.lombok' version '6.2.0'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"
apply plugin: 'application'

group 'uk.nhs.adaptors'

application {
    mainClass = 'uk.nhs.adaptors.pss.translator.Gp2gpTranslatorApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common')
    implementation project(':db-connector')
    implementation project(':schema')
    implementation 'com.github.spullara.mustache.java:compiler:0.9.10'
    implementation 'org.jdbi:jdbi3-core:3.44.0'
    implementation 'org.jetbrains:annotations:24.1.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.25.1'
    testImplementation 'org.mockito:mockito-inline:3.9.0'
    testImplementation 'org.projectlombok:lombok'
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
    testImplementation 'org.awaitility:awaitility:4.2.0'

    implementation 'com.azure:azure-storage-blob:12.15.0'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
    implementation 'com.amazonaws:aws-java-sdk-s3'
}

test {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
    }
}

configurations {
    integrationTestCompileOnly.extendsFrom testCompileOnly
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

task integrationTest(type: Test) {
    useJUnitPlatform() {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        shouldRunAfter test
    }
}

check.dependsOn integrationTest

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    excludeFilter = rootProject.file('config/spotbugs/exclude.xml')
    reports {
        xml.enabled = true
        html.enabled = false
    }
}
